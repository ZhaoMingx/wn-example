enum MealType { "tartan-steak", "spaghetti", "pasta", "lasagna", "ramen", "sushi" };

[
Constructor,
Constructor(String type),
Constructor(String type, double size)
]
interface Meal {
  attribute String type;
  attribute double size; // in grams
  readonly attribute boolean isRawMeal;

  void prepare(String type, double size);
  void prepare(String type);

  Promise<String> cook(String chefName);
};

[Constructor]
interface Tester {
  void foo(String arg, int times);	

  readonly attribute double PI;
  attribute int bar;
};


interface  DepthMask {
    Promise<void>  init (Photo photo);
    Promise<Image> computeFromCoordinate (Point coordinate, optional MaskParams maskParams);
    Promise<Image> computeFromThreshold (float depthThreshold, optional MaskParams maskParams);
};


exception ChokingHazard {
  const short MEDIUM = 0;
  const short SEVERE = 1;
  const short DEAD_HORSE = 2;

  short errorCode;
};
